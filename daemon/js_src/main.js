// Generated by CoffeeScript 1.6.3
(function() {
  var adjustZoom, photoHeight, photoWidth, zoom;

  photoWidth = 15;

  photoHeight = 20;

  zoom = d3.behavior.zoom();

  adjustZoom = function() {
    return d3.select('#viewport').attr('transform', "translate(" + d3.event.translate + ") scale(" + d3.event.scale + ")");
  };

  d3.xml('labmap.svg', 'image/svg+xml', function(xml) {
    var svg;
    svg = d3.select('#map').select(function() {
      return this.appendChild(xml.documentElement);
    });
    svg.call(zoom.on('zoom', adjustZoom));
    return d3.json('layout.json', function(err, layout) {
      var desc, descs, dist, i, machine, machines, spline, splineLen, splineMachines, _i, _j, _k, _len, _len1, _ref, _ref1;
      machines = [];
      for (spline in layout) {
        descs = layout[spline];
        spline = d3.select('#' + spline)[0][0];
        splineLen = spline.getTotalLength();
        splineMachines = [];
        for (_i = 0, _len = descs.length; _i < _len; _i++) {
          desc = descs[_i];
          for (i = _j = _ref = desc['from'], _ref1 = desc['to']; _ref <= _ref1 ? _j <= _ref1 : _j >= _ref1; i = _ref <= _ref1 ? ++_j : --_j) {
            splineMachines.push({
              hostname: desc['group'] + i
            });
          }
        }
        for (i = _k = 0, _len1 = splineMachines.length; _k < _len1; i = ++_k) {
          machine = splineMachines[i];
          dist = splineMachines.length === 1 ? 0 : splineLen * i / (splineMachines.length - 1);
          machine.pos = spline.getPointAtLength(dist);
        }
        machines = machines.concat(splineMachines);
      }
      return d3.select('#computers').selectAll('image').data(machines).enter().append('image').attr('id', function(d) {
        return d.hostname;
      }).attr('x', function(d) {
        return d.pos.x - photoWidth / 2;
      }).attr('y', function(d) {
        return d.pos.y - photoHeight / 2;
      }).attr('width', photoWidth).attr('height', photoHeight).attr('clip-path', 'url(#photo-clip-path)').attr('fill', 'red');
    });
  });

}).call(this);
